// Mocks generated by Mockito 5.4.5 from annotations
// in kalshi_exercise/test/src/presentation/bloc/financial_wellness_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:either_dart/either.dart' as _i3;
import 'package:kalshi_exercise/src/domain/entities/financial_wellness_entity.dart'
    as _i6;
import 'package:kalshi_exercise/src/domain/entities/wellness_enum.dart' as _i5;
import 'package:kalshi_exercise/src/domain/failures/financial_wellness_failure.dart'
    as _i4;
import 'package:kalshi_exercise/src/domain/usecases/get_financial_wellness_usecase.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [GetFinancialWellnessUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetFinancialWellnessUsecase extends _i1.Mock
    implements _i2.GetFinancialWellnessUsecase {
  MockGetFinancialWellnessUsecase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Either<_i4.FinancialWellnessFailure, _i5.FinancialWellnessStatus> call(
    _i6.FinancialWellnessEntity? params,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#call, [params]),
            returnValue: _i7.dummyValue<
              _i3.Either<
                _i4.FinancialWellnessFailure,
                _i5.FinancialWellnessStatus
              >
            >(this, Invocation.method(#call, [params])),
          )
          as _i3.Either<
            _i4.FinancialWellnessFailure,
            _i5.FinancialWellnessStatus
          >);
}
